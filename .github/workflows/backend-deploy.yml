name: Deploy Backend
on:
  push:
    branches: [ master ]
    paths:
      - 'backend/**'
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy Backend
    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './backend/package-lock.json'
      
      - name: Install Dependencies
        run: |
          cd backend
          npm ci
      
      - name: Build
        run: |
          cd backend
          npm run build || true
        env:
          NODE_ENV: production
          
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Deploy to Azure Web App
        id: deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'limos-rental-api'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: './backend'

      - name: Configure Web App Settings
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az webapp config appsettings set \
              --name limos-rental-api \
              --resource-group limos-rental-rg \
              --settings \
              NODE_ENV=production \
              COMMUNICATION_CONNECTION_STRING="${{ secrets.COMMUNICATION_CONNECTION_STRING }}" \
              EMAIL_FROM="noreply@elitewaylimo.ch" \
              ADMIN_EMAIL="aleksandarpantic98@gmail.com" \
              FRONTEND_URL="https://www.elitewaylimo.ch" \
              PORT=8080 \
              DEPLOYMENT_TIMESTAMP="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"

      - name: Wait for Deployment
        run: |
          echo "Waiting for deployment to stabilize..."
          sleep 30

      - name: Verify Deployment
        run: |
          echo "Checking health endpoint..."
          HEALTH_CHECK=$(curl -s https://limos-rental-api.azurewebsites.net/health)
          echo "Health check response: $HEALTH_CHECK"
          
          if [[ $HEALTH_CHECK == *"healthy"* ]]; then
            echo "✅ Health check passed"
            
            echo "Checking root endpoint for deployment info..."
            ROOT_CHECK=$(curl -s https://limos-rental-api.azurewebsites.net/)
            echo "Root endpoint response: $ROOT_CHECK"
            
            if [[ $ROOT_CHECK == *"deploymentInfo"* ]]; then
              echo "✅ Deployment verification successful"
              exit 0
            else
              echo "❌ Deployment verification failed - missing deployment info"
              exit 1
            fi
          else
            echo "❌ Health check failed"
            exit 1
          fi